datasource db {
  url      = env("DATABASE_URL")
  provider = "mysql"
}

generator client {
  provider = "prisma-client-js"
}

model roles {
  id         String    @id @default(uuid())
  roles_name String
  user       user[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime?
  deletedAt  DateTime?
}

model user {
  id             String           @id @default(uuid())
  roles_id       String
  email          String           @unique
  password       String
  fullname       String
  customer_emp   customer_emp[]
  d_purchase_emp d_purchase_emp[]
  roles          roles            @relation(fields: [roles_id], references: [id])
  createdAt      DateTime         @default(now())
  updatedAt      DateTime?
  deletedAt      DateTime?

  notification   notification[]
  d_purchase_log d_purchase_log[]

  @@index([roles_id])
}

enum TypeIm {
  Car
  BOAT
  AIR
  TRAIN
  TRUCK
}

model typeMaster {
  id           String         @id @default(uuid())
  type_name    String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime?
  deletedAt    DateTime?
  documentType documentType[]
}

model documentType {
  id             String    @id @default(uuid())
  type_master_id String
  type_key       String?
  do_key         TypeIm
  do_name        String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime?
  deletedAt      DateTime?

  document   document[]
  typeMaster typeMaster @relation(fields: [type_master_id], references: [id])
}

enum keyDocument {
  Document
  License
}

model document {
  id                       String      @id @default(uuid())
  document_type_id         String
  key                      String
  type_master              String?
  documennt_type           String
  document_key             keyDocument
  document_so              Boolean
  document_Invpick         Boolean // ใบรับตู้
  document_PL              Boolean // PL
  document_INV             Boolean // INV
  document_DraftBL         Boolean // DraftBL
  document_DraftFE         Boolean // DraftFE
  document_FE              Boolean // FE
  document_BILL_OF_LADING  Boolean // BILL_OF_LADING
  document_ARRIVAL_NOTICE  Boolean // ARRIVAL_NOTICE
  Cabinet_deposit          Boolean // มัดจำตู่
  document_Slip            Boolean
  document_do              Boolean // จดหมายแลกดีโอ
  document_card            Boolean // การ์ด
  document_draft           Boolean // ใบขนส่ง
  document_hairy           Boolean // ใบขน
  document_customs_receipt Boolean // ใบเสร็จรับเงินศุลกรกร
  document_certificate     Boolean // ใบรับรอง
  document_world20         Boolean // ภw 20
  document_tracking        Boolean //
  document_etc             Boolean // อื่นๆ
  document_power_attorney  Boolean // หนังสือมอบอำนาจ
  createdAt                DateTime    @default(now())
  updatedAt                DateTime?
  deletedAt                DateTime?

  documentType documentType @relation(fields: [document_type_id], references: [id])
}

model customer {
  id                String            @id @default(uuid())
  cus_code          String            @unique
  cus_fullname      String?
  cus_phone         String?
  cus_line          String?
  cus_website       String?
  cus_sex           String?
  cus_international String?
  cus_age           Int?
  cus_etc           String?
  cus_facebook      String?
  cus_wechat        String?
  details           customer_detail?
  customer_status   customer_status[]
  customer_emp      customer_emp[]

  createdAt DateTime  @default(now())
  updatedAt DateTime?
  deletedAt DateTime?

  d_purchase d_purchase[]
}

model customer_group {
  id         String    @id @default(uuid())
  group_name String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime?
  deletedAt  DateTime?

  customer_detail customer_detail?
}

model customer_detail {
  id              String          @id @default(uuid())
  customer_id     String          @unique
  cd_group_id     String?         @unique
  cd_consider     String?
  cd_company      String?
  cd_typeinout    String?
  cd_custype      String?
  cd_cusservice   String?
  cd_channels     String?
  cd_num          Int?
  cd_capital      String?
  cd_emp          String?
  cd_shareholders String?
  cd_department   String?
  cd_address      String?
  cd_num_saka     String?
  cd_frequency    String?
  cd_leader       String?
  cd_priority     String?
  status_update   Boolean?        @default(false)
  customer        customer        @relation(fields: [customer_id], references: [id])
  createdAt       DateTime        @default(now())
  updatedAt       DateTime?
  deletedAt       DateTime?
  customer_group  customer_group? @relation(fields: [cd_group_id], references: [id])

  @@index([customer_id, cd_group_id])
}

model customer_status {
  id          String    @id @default(uuid())
  customer_id String
  cus_status  String
  active      String
  customer    customer  @relation(fields: [customer_id], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?
  deletedAt   DateTime?

  @@index([customer_id])
}

model customer_emp {
  id          String    @id @default(uuid())
  customer_id String
  user_id     String
  cus_status  String
  active      String
  user        user      @relation(fields: [user_id], references: [id])
  customer    customer  @relation(fields: [customer_id], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?
  deletedAt   DateTime?

  // d_purchase  d_purchase?
  @@index([customer_id])
}

model d_purchase {
  id                         String    @id @default(uuid())
  book_number                String    @unique
  customer_number            String?
  customer_id                String    @default("")
  d_route                    String?
  d_transport                String?
  d_term                     String?
  d_origin                   String?
  d_destination              String?
  d_size_cabinet             String?
  d_weight                   String?
  d_address_origin           String?
  d_address_origin_la        String?
  d_address_origin_long      String?
  d_address_destination      String?
  d_address_destination_la   String? //ตำแหน่งปลายทาง
  d_address_destination_long String? //ตำแหน่งปลายทาง
  d_refund_tag               String?
  d_truck                    String?
  d_etc                      String?
  d_purchase_ref             String?
  d_status                   String?
  createdAt                  DateTime  @default(now())
  updatedAt                  DateTime?
  deletedAt                  DateTime?
  d_emp_look                 String?   @default("")
  d_group_work               String?   @default("")
  d_num_date                 String? // ระยะเวลา
  d_end_date                 DateTime? // วันเวลาที่สิ้นสุด
  customer                   customer  @relation(fields: [customer_id], references: [id])

  d_product                   d_product?
  d_product_image             d_product_image[]
  d_document                  d_document[]
  d_purchase_emp              d_purchase_emp[]
  payment_purchase            payment_purchase[]
  d_purchase_status           d_purchase_status[]
  d_agentcy                   d_agentcy[]
  d_payment_type              d_payment_type[] //ค่าใช้จ่าย ต้นทางปลายทาง
  d_purchase_customer_payment d_purchase_customer_payment[] // การชำระเงินของลูกค้า
  d_purchase_log              d_purchase_log[]
  d_sale_agentcy              d_sale_agentcy[]
  d_confirm_purchase          d_confirm_purchase[]


  CS_Purchase CS_Purchase[]

  @@index([customer_id])
}




model d_confirm_purchase {
  id            String    @id @default(uuid())
  d_purchase_id String
  type_confirm  String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime?
  deletedAt     DateTime?

  d_purchase d_purchase @relation(fields: [d_purchase_id], references: [id])
  d_confirm_purchase_file d_confirm_purchase_file[]
}


model d_confirm_purchase_file {
  id            String    @id @default(uuid())
  d_confirm_id  String
  file_name     String
  file_path     String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime?
  deletedAt     DateTime?

  d_confirm_purchase d_confirm_purchase @relation(fields: [d_confirm_id], references: [id])
}

model d_purchase_status {
  id            String        @id @default(uuid())
  d_purchase_id String
  status_key    String // สถานะ
  status_name   String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime?
  deletedAt     DateTime?
  active        Boolean
  master_status master_status @relation(fields: [status_key], references: [status_key])
  d_purchase    d_purchase    @relation(fields: [d_purchase_id], references: [id])
}

model d_purchase_emp {
  id            String    @id @default(uuid())
  d_purchase_id String
  user_id       String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime?
  deletedAt     DateTime?

  user       user       @relation(fields: [user_id], references: [id])
  d_purchase d_purchase @relation(fields: [d_purchase_id], references: [id])

  @@index([d_purchase_id])
}

model d_payment_type {
  id            String    @id @default(uuid())
  d_purchase_id String
  payment_type  String? //ต้นทาง ปลายทาง
  payment_name  String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime?
  deletedAt     DateTime?

  d_purchase d_purchase @relation(fields: [d_purchase_id], references: [id])
}

model d_payment_customer_type {
  id             String    @id @default(uuid())
  d_payment_type String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime?
  deletedAt      DateTime?
}

model d_purchase_customer_payment {
  id              String    @id @default(uuid())
  d_purchase_id   String // รหัสการสั่งซื้อ
  payment_type    String // ประเภทการชำระเงิน
  payment_name    String // ชื่อการชำระเงิน
  payment_date    DateTime // วันที่ชำระเงิน
  payment_price   String // จำนวนเงิน
  payment_image_name   String // รูปภาพ
  payment_path    String // ที่อยู่ไฟล์
  createdAt       DateTime  @default(now())
  updatedAt       DateTime?
  deletedAt       DateTime?

  d_purchase d_purchase @relation(fields: [d_purchase_id], references: [id])
}

model d_product {
  id                 String            @id @default(uuid())
  d_product_name     String?
  d_purchase_id      String            @unique
  review_date        DateTime?
  performance_rating DateTime?
  createdAt          DateTime          @default(now())
  updatedAt          DateTime?
  deletedAt          DateTime?
  d_product_image    d_product_image[]
  d_purchase         d_purchase        @relation(fields: [d_purchase_id], references: [id])

  @@index([d_purchase_id])
}

model d_product_image {
  id                   String    @id @default(uuid())
  d_product_id         String
  d_purchase_id        String
  d_product_type       String?
  d_product_image_name String?
  d_active             Boolean?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime?
  deletedAt            DateTime?

  d_purchase d_purchase @relation(fields: [d_purchase_id], references: [id])
  d_product  d_product  @relation(fields: [d_product_id], references: [id])

  @@index([d_product_id, d_purchase_id])
}

model d_document {
  id              String     @id @default(uuid())
  d_purchase_id   String
  d_document_name String
  d_document_key  String // key ยกตัวอย่าง เอกสาร ใบอนุญาติ
  createdAt       DateTime   @default(now())
  updatedAt       DateTime?
  deletedAt       DateTime?
  d_purchase      d_purchase @relation(fields: [d_purchase_id], references: [id])

  d_document_file d_document_file[]
}

model d_document_file {
  id            String    @id @default(uuid())
  d_document_id String
  file_name     String
  file_path     String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime?
  deletedAt     DateTime?

  d_document d_document @relation(fields: [d_document_id], references: [id])
}

model d_purchase_log {
  id            String    @id @default(uuid())
  d_purchase_id String
  user_id       String
  role_id       String?
  log_type      String?
  log_text      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime?
  deletedAt     DateTime?

  d_purchase d_purchase @relation(fields: [d_purchase_id], references: [id])
  user       user       @relation(fields: [user_id], references: [id])
}

model agentcy {
  id          String    @id @default(uuid())
  agent_name  String
  agent_phone String
  agent_email String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?
  deletedAt   DateTime?

  d_agentcy d_agentcy[]
}

model d_agentcy {
  id            String    @id @default(uuid())
  d_purchase_id String
  agentcy_id    String
  status        Boolean?  @default(false)
  agent_boat    String? // สายเรือ
  agentcy_tit   String? // tit
  agentcy_etd   String? // etd
  agentcy_eta   String? // eta
  agentcy_etc   String? // etc
  createdAt     DateTime  @default(now())
  updatedAt     DateTime?
  deletedAt     DateTime?

  agentcy          agentcy            @relation(fields: [agentcy_id], references: [id])
  d_purchase       d_purchase         @relation(fields: [d_purchase_id], references: [id])
  d_agentcy_detail d_agentcy_detail[]
  d_agentcy_file   d_agentcy_file[]

  d_sale_agentcy d_sale_agentcy[]
}

model d_agentcy_detail {
  id            String  @id @default(uuid())
  d_agentcy_id  String
  d_purchase_id String
  d_type        String? // หัวข้อ
  d_type_text   String?
  d_price       String?
  d_currency    String? // สกุลเงิน
  d_nettotal    Int? // ยอดค่าใช้จ่าย
  d_discount    String? // ส่วนลด
  d_net_balance Int? // ยอดใช้จ่ายที่เซลล์เห็น

  createdAt DateTime  @default(now())
  updatedAt DateTime?
  deletedAt DateTime?
  d_agentcy d_agentcy @relation(fields: [d_agentcy_id], references: [id])
}

model d_agentcy_file {
  id           String    @id @default(uuid())
  d_agentcy_id String
  file_name    String
  file_path    String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime?
  deletedAt    DateTime?

  d_agentcy d_agentcy @relation(fields: [d_agentcy_id], references: [id])
}

model master_status {
  id           String    @id @default(uuid())
  status_key   String    @unique
  status_name  String?
  status_color String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime?
  deletedAt    DateTime?

  d_purchase_status d_purchase_status[]
}

model notification {
  id          String    @id @default(uuid())
  user_id     String
  title       String
  subject_key String
  link_to     String?
  data        Json
  message     String
  status      Boolean
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?
  deletedAt   DateTime?

  user user @relation(fields: [user_id], references: [id])
}

model payment_purchase {
  id                  String    @id @default(uuid())
  d_purchase_id       String
  payment_type        String
  payment_name        String
  payment_currency    String
  payment_date        DateTime
  payment_price       String
  payment_discount    String
  payment_total_price Int
  payment_net_balance Int
  createdAt           DateTime  @default(now())
  updatedAt           DateTime?
  deletedAt           DateTime?

  d_purchase d_purchase @relation(fields: [d_purchase_id], references: [id])

  // payment_purchase_detail payment_purchase_detail[]
}

model d_sale_agentcy {
  id           String    @id @default(uuid())
  d_purchase_id  String
  d_agentcy_id String
  status       Boolean?  @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime?
  deletedAt    DateTime?

  d_sale_agentcy_file d_sale_agentcy_file[]

  d_agentcy  d_agentcy  @relation(fields: [d_agentcy_id], references: [id])
  d_purchase d_purchase @relation(fields: [d_purchase_id], references: [id])
}

model d_sale_agentcy_file {
  id           String    @id @default(uuid())
  d_sale_agent_id String
  d_purchase_id  String
  file_name    String
  file_path    String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime?
  deletedAt    DateTime?

  d_sale_agentcy d_sale_agentcy @relation(fields: [d_sale_agent_id], references: [id])
}


model Currency {
  id            String    @id @default(uuid())
  currency_name String //ชื่อสกุลเงิน
  rate_money    Float? // อัตราซื้อ
  createdAt    DateTime  @default(now())
  updatedAt    DateTime?
  deletedAt    DateTime?
}


model CS_Purchase{
  id              String    @id @default(uuid())
  d_purchase_id   String
  status_key      String?
  status_name     String?
  status_active   Boolean?
  number_key      Int?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime?
  deletedAt       DateTime?

  d_purchase  d_purchase @relation(fields: [d_purchase_id], references: [id])
  Bookcabinet Bookcabinet?
  Receive  Receive?
  Contain Contain?
  Cs_document Cs_document?
  ProveDeparture ProveDeparture?
}

model Bookcabinet{ //จองตู้
  id              String    @id @default(uuid())
  cs_purchase_id   String    @unique
  date_receiving  String? // วันที่รับเรื่อง
  date_booking    String? // วันที่ Booking
  agentcy_id      String? // บริษัทเรือ
  agentcy_etc     String? // สายเรือ
  date_entering   DateTime? // วันที่เข้าบรรจุตู้
  createdAt       DateTime  @default(now())
  updatedAt       DateTime?
  deletedAt       DateTime?
  CS_Purchase  CS_Purchase @relation(fields: [cs_purchase_id], references: [id])

  Bookcabinet_picture Bookcabinet_picture[]
 
}

model Bookcabinet_picture{ 
  id              String    @id @default(uuid())
  bookcabinet_id  String
  picture_name    String
  picture_path    String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime?
  deletedAt       DateTime?
  Bookcabinet Bookcabinet @relation(fields: [bookcabinet_id], references: [id])
}


model Receive{ //รับตู้
  id              String    @id @default(uuid())
  cs_purchase_id  String  @unique
  date_booking  String? // วันที่รับตู้
  so_no    String? // SO/NO
  container_no      String? // Container No
  createdAt       DateTime  @default(now())
  updatedAt       DateTime?
  deletedAt       DateTime?

  CS_Purchase  CS_Purchase @relation(fields: [cs_purchase_id], references: [id])


  Receive_picture Receive_picture[]
}


model Receive_picture{
  id              String    @id @default(uuid())
  receive_id      String
  picture_name    String
  picture_path    String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime?
  deletedAt       DateTime?
  Receive Receive @relation(fields: [receive_id], references: [id])
}

model  Contain{ //บรรจุตู้
  id              String    @id @default(uuid())
  cs_purchase_id  String  @unique
  date_booking    DateTime? // วันที่บรรจุตู้
  carbon_total    String? // คาร์บอนทั้งหมด
  cmb_total       String? // คิวบิคเมตรทั้งหมด
  nw_total        String? // น้ำหนักสุทธิทั้งหมด
  gw_total        String? // น้ำหนักของทั้งหมด

  createdAt       DateTime  @default(now())
  updatedAt       DateTime?
  deletedAt       DateTime?

  CS_Purchase  CS_Purchase @relation(fields: [cs_purchase_id], references: [id])
  Contain_product Contain_product[]
  Contain_picture Contain_picture[]
}


model Contain_product{
  id              String    @id @default(uuid())
  contain_id      String
  product_name    String
  product_hscode     String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime?
  deletedAt       DateTime?

  Contain Contain @relation(fields: [contain_id], references: [id])

}

model Contain_picture{
  id              String    @id @default(uuid())
  contain_id      String
  key             String
  picture_name    String
  picture_path    String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime?
  deletedAt       DateTime?

  Contain Contain @relation(fields: [contain_id], references: [id])
}

model  Cs_document{ //จัดทำเอกสาร
  id              String    @id @default(uuid())
  cs_purchase_id  String  @unique
  document_invoice_date   DateTime? // วันที่ออกใบแจ้งหนี้
  document_packinglist     DateTime? // เลขที่ใบแจ้งหนี้
  document_draft   DateTime? // F/e
  document_etc     DateTime? // ใบอนุญาตอื่นๆ
  document_draft_invoice DateTime? // ใบแจ้งหนี้
  document_draft_bl DateTime? // Draft BL
  document_master_bl DateTime? // Master BL

  CS_Purchase  CS_Purchase @relation(fields: [cs_purchase_id], references: [id])
  Cs_document_file Cs_document_file[]
}


model Cs_document_file{
  id              String    @id @default(uuid())
  cs_document_id  String 
  key             String
  file_name       String
  file_path       String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime?
  deletedAt       DateTime?

  Cs_document Cs_document @relation(fields: [cs_document_id], references: [id])
}



model ProveDeparture{ //ยืนยันวันที่ออกเดินทาง
  id              String    @id @default(uuid())
  cs_purchase_id  String  @unique
  date_etd        DateTime? // วันที่ออกเรือ
  date_eta        DateTime? // วันที่เข้าเรือ
  post_origin     String? // ต้นทาง
  post_destination String? // ปลายทาง
  vessel_name     String? // ชื่อเรือ
  createdAt       DateTime  @default(now())
  updatedAt       DateTime?
  deletedAt       DateTime?

  CS_Purchase  CS_Purchase @relation(fields: [cs_purchase_id], references: [id])
}