datasource db {
    url      = env("DATABASE_URL")
    provider = "mysql"
}

generator client {
    provider = "prisma-client-js"
}



model roles {
    id          String @id @default(uuid())
    roles_name  String 
    user        user[]
    createdAt          DateTime  @default(now())
    updatedAt          DateTime?
    deletedAt  DateTime?
}

model user {
    id           String  @id @default(uuid())
    roles_id     String  
    email        String  @unique
    password     String  
    fullname     String
    customer_emp customer_emp[]
    roles        roles @relation(fields: [roles_id], references: [id])
    createdAt          DateTime  @default(now())
    updatedAt         DateTime?
    deletedAt  DateTime?
    @@index([roles_id])
}


model customer {
    id           String  @id @default(uuid())
    cus_fullname String?
    cus_phone    String?
    cus_line     String?
    cus_website  String?
    cus_sex      String?
    cus_international String?
    cus_age    Int?
    cus_etc      String?
    cus_facebook String?
    cus_wechat   String?
    details      customer_detail?
    customer_status      customer_status[]
    customer_emp        customer_emp[]
    createdAt          DateTime  @default(now())
    updatedAt           DateTime? 
    deletedAt  DateTime?

}

model customer_detail {
    id              String @id @default(uuid())
    customer_id     String @unique
    cd_consider     String?
    cd_company      String?
    cd_typeinout    String?
    cd_custype      String?
    cd_cusservice   String?
    cd_channels     String?
    cd_num          Int?
    cd_capital      String?
    cd_emp          String?
    cd_shareholders String?
    cd_address      String?
    cd_num_saka     String?
    cd_frequency    String?
    cd_leader       String?
    cd_priority     String?
    customer        customer @relation(fields: [customer_id], references: [id])
    createdAt          DateTime  @default(now())
    updatedAt          DateTime? 
    deletedAt  DateTime? 
    @@index([customer_id])
}


model customer_status {
    id           String @id @default(uuid())
    customer_id  String
    cus_status   String 
    active       String

    customer        customer @relation(fields: [customer_id], references: [id])
    createdAt          DateTime  @default(now())
    updatedAt          DateTime?  
    deletedAt DateTime? 
    @@index([customer_id])

} 


model customer_emp{
    id   String @id @default(uuid())
    customer_id String 
    user_id  String  
    cus_status String 
    active String
    
    user         user  @relation(fields: [user_id], references: [id])    
    customer     customer @relation(fields: [customer_id], references: [id])
    createdAt          DateTime  @default(now())
    updatedAt          DateTime?  
    deletedAt DateTime?
    @@index([customer_id])
}


model  d_purchase {
    id String @id @default(uuid())
    book_number String  @unique
    customer_number String
    customer_id String
    d_route  String?
    d_transport String?
    d_term  String?
    d_origin String?
    d_destination String?
    d_size_cabinet String?
    d_weight String?
    d_address_origin String?
    d_address_destination String?
    d_refund_tag String?
    d_truck String?
    d_etc String?
    createdAt          DateTime  @default(now())
    updatedAt          DateTime?  
    deletedAt DateTime?
    d_product  d_product?
    d_product_image d_product_image[]
    
} 


model d_product {
     id String @id @default(uuid())
     d_product_name String?
     d_purchase_id  String @unique
     review_date DateTime?
     performance_rating DateTime?
     createdAt          DateTime  @default(now())
     updatedAt          DateTime?  
     deletedAt DateTime?
     d_product_image  d_product_image[]

     d_purchase        d_purchase  @relation(fields: [d_purchase_id], references: [id])
    @@index([d_purchase_id])
}

model d_product_image {
     id String @id @default(uuid())
     d_product_id String
     d_purchase_id String
     d_product_image_name String?
     d_active  Boolean?
     createdAt          DateTime  @default(now())
     updatedAt          DateTime?  
     deletedAt DateTime?

     d_purchase      d_purchase  @relation(fields: [d_purchase_id], references: [id])
     d_product        d_product  @relation(fields: [d_product_id], references: [id])
    
    @@index([d_product_id,d_purchase_id])
}

